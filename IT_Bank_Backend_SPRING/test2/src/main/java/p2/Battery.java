package p2;

public interface Battery {
	
	int getEnergy();
	
	void setEnergy(int energy);
	
	void useEnergy();
	// 배터리가 가질수 있는 속성들을 인터페이스 묶어서 나중에 하나하나 일일히 작성할 필요없이  한번에 구현 할 수 있다.
}
 
// 다형성:상속을 통해 기능을 확장하거나(다양한 성질을 부여시킬수 있다.) 변경하는 것을 가능하게 해주는 것  
// 상속을 통해 다형성을 제공하면 자식클래스와 부모 클래스의 결합도가 증가한다.
// -> 원치 않는 메서드도 상속받기 떄문에 버그 발생 확률 또한 증가한다.
// 인터페이스: 클래스들이 구현해야할 동작을 강제한다.
// 인터페이스를 사용하지 않으면 필요 없는 메서드도 구현을 해야되지만 
// 사용한다면 필요한 것만 구현하면 되니까 유연성이 올라간다.

